name: TDR Tag and pre deploy
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  pre-deploy:
    uses: nationalarchives/tdr-github-actions/.github/workflows/lambda_build.yml@main
    with:
      repo-name: tdr-antivirus
      artifact-name: function
      artifact-file-type: zip
      artifact-path: lambda
      build-command: |
        wget --header "Authorization: token $GITHUB_TOKEN" https://raw.githubusercontent.com/nationalarchives/tdr-configurations/master/antivirus/rules.json
        docker build -f Dockerfile-yara --pull --no-cache --build-arg YARA_VERSION=$(cat yara-version.txt) -t yara .
        docker build -f Dockerfile-dependencies --pull --no-cache --build-arg YARA_VERSION=$(cat yara-version.txt) -t yara-dependencies .
        docker build -f Dockerfile-compile --no-cache --build-arg YARA_VERSION=$(cat yara-version.txt) -t yara-rules .
        docker run -itd --rm --name dependencies yara-dependencies
        docker cp dependencies:/lambda/dependencies.zip .
        docker run -itd --rm --name rules yara-rules
        mkdir -p lambda/src
        docker cp rules:/rules/output ./lambda/src
        unzip -q dependencies.zip -d ./lambda/src
        cp src/matcher.py src/guard_duty_malware_scan.py src/download_file.py ./lambda/src
        cd lambda
        zip -r9 function.zip .
        cd ../..
    secrets:
      MANAGEMENT_ACCOUNT: ${{ secrets.MANAGEMENT_ACCOUNT }}
      WORKFLOW_PAT: ${{ secrets.WORKFLOW_PAT }}
  deploy:
    needs: pre-deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: gh workflow run deploy.yml -f environment=intg -f to-deploy=${{ needs.pre-deploy.outputs.next-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_PAT }}
